[{"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\index.js":"1","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\App.js":"2","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Country.js":"3","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Score.js":"4","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\HiLoButton.js":"5","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Home.js":"6","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\End.js":"7","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Game.js":"8"},{"size":219,"mtime":1610820378826,"results":"9","hashOfConfig":"10"},{"size":3643,"mtime":1610845289742,"results":"11","hashOfConfig":"10"},{"size":949,"mtime":1610836806828,"results":"12","hashOfConfig":"10"},{"size":281,"mtime":1610839548404,"results":"13","hashOfConfig":"10"},{"size":905,"mtime":1610838493655,"results":"14","hashOfConfig":"10"},{"size":675,"mtime":1610845292433,"results":"15","hashOfConfig":"10"},{"size":1465,"mtime":1610845243303,"results":"16","hashOfConfig":"10"},{"size":455,"mtime":1610845247164,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1g0trlw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\index.js",[],["36","37"],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\App.js",["38"],"import React from 'react';\nimport Country from './components/Country.js';\nimport Score from './components/Score.js';\nimport HiLoButton from './components/HiLoButton.js';\nimport Home from './components/Home.js';\nimport Game from './components/Game.js';\nimport End from './components/End.js';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\n\n\n\nfunction getRandInt(countryNum = 240, exclude = -1) {\n  var rand = null;\n  while (rand === null || rand === exclude) {\n    rand = Math.round(Math.random() * (countryNum - 1));\n  }\n  return rand;\n}\n\nclass App extends React.Component {\n  state = {\n    page: \"home\",\n    country1: {\n      dbId: 0,\n      name: \"\",\n      population: \"\",\n      size: \"\"\n    },\n    country2: {\n      db_id: 0,\n      name: \"\",\n      population: \"\",\n      size: \"\"\n    },\n    score: 0,\n    countryNum: 240,\n    highScore: 0,\n    mode: \"population\"\n  }\n\n  //index, dbId, name, population, size\n  setCountry = () => {\n    if (this.state.page === \"home\" || this.state.page === \"end\") { // New game\n      var x1 = getRandInt(this.state.countryNum);\n      var x2 = getRandInt(this.state.countryNum, x1);\n      fetch(`/api/countries/${x1}`)\n        .then(res => res.json())\n        .then(country1data => this.setState({ country1: country1data[0] }));\n\n      fetch(`/api/countries/${x2}`)\n        .then(res => res.json())\n        .then(country2data => this.setState({ country2: country2data[0] }));\n\n      this.setState({ page: \"game\" });\n      this.setState({ score: 0 });\n\n\n    } else if (this.state.page === \"game\") { // In a game - get next country\n      var newInt = getRandInt(this.state.country2.rowid);\n      this.setState({ country1: this.state.country2 });\n\n      fetch(`/api/countries/${newInt}`)\n        .then(res => res.json())\n        .then(country2data => this.setState({ country2: country2data[0] }));\n\n    }\n  }\n\n  componentDidMount() {\n    fetch(`/api/countryNum`)\n        .then(res => res.json())\n        .then(countryNum => this.setState({ countryNum: countryNum }));\n  }\n \n  HiLoPress = (correct) => { // Correct Press\n    if (correct === 1) {\n      this.setState({ score: (this.state.score + 1) }, () => {\n        if (this.state.score >= this.state.highScore) this.setState({ highScore: this.state.score });\n      });\n      this.setCountry();\n    } else {\n      this.setState( {page: \"end\"} );\n    }\n  }\n\n  setMode = (mode) => {\n    this.setState( {mode: mode} );\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Route path=\"/\" exact>\n            <Home setMode={this.setMode}/>\n          </Route>\n          <Route path=\"/game\" exact>\n            <div className=\"game\">\n              <Game page={this.state.page} setCountry={this.setCountry} mode={this.state.mode}/>\n              <h1> Country 1</h1>\n              <Country country={this.state.country1} index={1} mode={this.state.mode}/>\n              <br></br>\n              <h1> Country 2</h1>\n              <Country country={this.state.country2} index={2} mode={this.state.mode}/>\n              <HiLoButton country1={this.state.country1} country2={this.state.country2} HiLoPress={this.HiLoPress} mode={this.state.mode} />\n              <br></br>\n              <Score score={this.state.score} highScore={this.state.highScore} />\n            </div>\n          </Route>\n          <Route path=\"/end\" exact>\n\n              <End country={this.state.country2} mode={this.state.mode} score={this.state.score}></End>\n              <Score score={this.state.score} highScore={this.state.highScore} />\n\n          </Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Country.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Score.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\HiLoButton.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Home.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\End.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Game.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":9,"column":35,"nodeType":"45","messageId":"46","endLine":9,"endColumn":39},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]
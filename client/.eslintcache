[{"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\index.js":"1","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\App.js":"2","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Country.js":"4","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Score.js":"5","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\home.js":"6","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\game.js":"7","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\end.js":"8","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\HiLoButton.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":3628,"mtime":1610774255894,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":923,"mtime":1610774414077,"results":"14","hashOfConfig":"11"},{"size":260,"mtime":1610754518041,"results":"15","hashOfConfig":"11"},{"size":468,"mtime":1610774277649,"results":"16","hashOfConfig":"11"},{"size":758,"mtime":1610751468364,"results":"17","hashOfConfig":"11"},{"size":1221,"mtime":1610774432468,"results":"18","hashOfConfig":"11"},{"size":845,"mtime":1610771778561,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"pi4c38",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\index.js",[],["40","41"],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\App.js",["42","43","44"],"import React from 'react';\nimport Country from './components/Country.js';\nimport Score from './components/Score.js';\nimport HiLoButton from './components/HiLoButton.js';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport Home from './pages/home.js';\nimport Game from './pages/game.js';\nimport End from './pages/end.js';\nimport { useHistory } from \"react-router-dom\";\nimport { browserHistory } from 'react-router';\n\n\nfunction getRandInt(exclude = -1) {\n  var countryNum = 250\n  var rand = null;\n  while (rand === null || rand === exclude) {\n    rand = Math.round(Math.random() * (countryNum - 1));\n  }\n  return rand;\n}\n\nclass App extends React.Component {\n\n\n  state = {\n    page: \"home\",\n    country1: {\n      dbId: 0,\n      name: \"\",\n      population: \"\",\n      size: \"\"\n    },\n    country2: {\n      db_id: 0,\n      name: \"\",\n      population: \"\",\n      size: \"\"\n    },\n    score: 0,\n    highScore: 0,\n    mode: \"pop\"\n  }\n\n  //index, dbId, name, population, size\n  setCountry = () => {\n    if (this.state.page === \"home\" || this.state.page === \"end\") { // New game\n      var x1 = getRandInt();\n      var x2 = getRandInt(x1);\n      fetch(`/api/countries/${x1}`)\n        .then(res => res.json())\n        .then(country1data => this.setState({ country1: country1data[0] }, () => console.log('Fetch 1 Successful', country1data)));\n\n      fetch(`/api/countries/${x2}`)\n        .then(res => res.json())\n        .then(country2data => this.setState({ country2: country2data[0] }, () => console.log('Fetch 2 Successful', country2data)));\n\n      this.setState({ page: \"game\" });\n      this.setState({ score: 0 });\n\n\n    } else if (this.state.page === \"game\") { // In a game - get next country\n      var newInt = getRandInt(this.state.country2.rowid);\n      this.setState({ country1: this.state.country2 });\n\n      fetch(`/api/countries/${newInt}`)\n        .then(res => res.json())\n        .then(country2data => this.setState({ country2: country2data[0] }, () => {\n          console.log('Fetch New Successful', country2data);\n          console.log('Country 1: ', this.state.country1);\n          console.log('Country 2: ', this.state.country2);\n        }));\n\n    }\n  }\n \n  HiLoPress = (correct) => { // Correct Press\n    if (correct === 1) {\n      console.log(\"Correct!\");\n      this.setState({ score: (this.state.score + 1) }, () => {\n        if (this.state.score >= this.state.highScore) this.setState({ highScore: this.state.score });\n      });\n      this.setCountry();\n    } else {\n      console.log(\"Incorrect!\");\n      this.setState( {page: \"end\"} );\n    }\n  }\n\n  setMode = (mode) => {\n    this.setState( {mode: mode} );\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <h1>Country Guesser</h1>\n          <Route path=\"/\" exact>\n            <Home setMode={this.setMode}/>\n          </Route>\n          <Route path=\"/game\" exact>\n\n            <Game page={this.state.page} setCountry={this.setCountry} />\n            <h2> Country 1</h2>\n            <Country country={this.state.country1} index={1} mode={this.state.mode}/>\n            <h2> Country 2</h2>\n            <Country country={this.state.country2} index={2} mode={this.state.mode}/>\n            <HiLoButton country1={this.state.country1} country2={this.state.country2} HiLoPress={this.HiLoPress} />\n\n          </Route>\n          <Route path=\"/end\" exact>\n            <End country={this.state.country2} mode={this.state.mode}></End>\n          </Route>\n          <Score score={this.state.score} highScore={this.state.highScore} />\n        </div>\n      </Router>\n    );\n  }\n}\n\n\nexport default App;\n","C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Country.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\Score.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\home.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\game.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\pages\\end.js",[],"C:\\Users\\Kenneth\\Desktop\\Coding\\country-trivia-site\\client\\src\\components\\HiLoButton.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":35,"nodeType":"51","messageId":"52","endLine":6,"endColumn":39},{"ruleId":"49","severity":1,"message":"53","line":10,"column":10,"nodeType":"51","messageId":"52","endLine":10,"endColumn":20},{"ruleId":"49","severity":1,"message":"54","line":11,"column":10,"nodeType":"51","messageId":"52","endLine":11,"endColumn":24},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'browserHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]